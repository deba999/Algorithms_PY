#SUM with given k

#O(n^2) approach
def check(arr,k,n):

    for i in range(n-1):
        for j  in range(i+1,n):
            if arr[i]+arr[j]==k:
                return ('y')
    return 'N'

#nlogn approach :as first sorting is done.
#even if the arrayb itsb is not sorted it will work
#as we are cheking all the possiblities
def check2(arr,k,n):
    arr.sort()
    l=0
    r=n-1

    while l<r:
        if arr[l]+arr[r]==k:
            return ('y')
        elif arr[l]+arr[r]<k:
            l+=1
        else:
            r-=1
    return ('N')

#o(n) approach
def check3(arr,n,k):
    d={}

    for i in range(n):
        x=k-arr[i]
        if x in d :
            return ('y')
    
        d.setdefault(arr[i],0)
        d[arr[i]]+=1
        #print(d)

    return ('N')

a=[1,2,5,6,7]

k=4
print(check3(a,k,len(a)))
